<Window x:Class="TodoApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TodoApp"
        mc:Ignorable="d"
        Title="Todo App" Height="480" Width="800" MinWidth="800" MinHeight="480">
    <Window.Resources>
        <local:TaskStatusToImagePathConverter x:Key="TaskStatusToImagePathConverter" />
        <local:DueDateToColorConverter x:Key="DueDateToColorConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderThickness="0,0,0,5" CornerRadius="0" Margin="0,0,0,0">
            <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FFF0F0F0" Offset="0.5"/>
                    <GradientStop Color="#FFF0F0F0" Offset="0.75"/>
                </LinearGradientBrush>
            </Border.BorderBrush>
            <Menu Margin="0,0,0,0">
                <MenuItem Header="File">
                    <MenuItem Header="Clear" Click="MenuNew_Click"/>
                    <MenuItem Header="Open..." Click="MenuOpen_Click"/>
                    <MenuItem Header="Save" Click="MenuSave_Click"/>
                    <MenuItem Header="Save as..." Click="MenuSaveas_Click"/>
                </MenuItem>
            </Menu>
        </Border>
        <WrapPanel Grid.Row="1" Margin="5,0,0,0">
            <Button Margin="0" Height="35" Click="ButtonNewTaskGroup_Click" Background="{x:Null}" BorderBrush="{x:Null}">
                <WrapPanel>
                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/AddNewIcon.png"/>
                    <Label Content="New group" VerticalAlignment="Center"/>
                </WrapPanel>
            </Button>
        </WrapPanel>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <ListBox Grid.Column="0" x:Name="groupList" Margin="5" HorizontalContentAlignment="Stretch" ScrollViewer.CanContentScroll="False" BorderThickness="1" Background="#FFE4FBFB">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch" Background="Transparent" Margin="10">
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Duration="00:00:01"
                                                     From="0"
                                                     To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Duration="00:00:02"
                                                     From="1"
                                                     To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50*"/>
                                <RowDefinition Height="50*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonNewTask_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Add new task">
                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/AddNewIcon.png"/>
                                </Button>
                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonUpGroup_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Move group up">
                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/MoveUpIcon.png"/>
                                </Button>
                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonDownGroup_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Move group down">
                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/MoveDownIcon.png"/>
                                </Button>
                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonDeleteGroup_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Delete group">
                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/TaskFailedIcon.png"/>
                                </Button>
                            </StackPanel>
                            <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="0" HorizontalAlignment="Center" FontWeight="Bold" BorderThickness="0" Background="Transparent"/>
                            <ListBox MinHeight="20" HorizontalAlignment="Stretch" SelectionChanged="taskList_SelectionChanged" HorizontalContentAlignment="Stretch" Grid.Row="1" x:Name="taskList" Margin="5,5,5,5" ItemsSource="{Binding Tasks}" Drop="taskList_Drop" PreviewMouseRightButtonDown="taskList_PreviewMouseRightButtonDown" AllowDrop="True" Background="#FFEBFFEA">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0">
                                            <Grid.Background>
                                                <SolidColorBrush Color="White" Opacity="0.5"/>
                                            </Grid.Background>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="150*"/>
                                                <ColumnDefinition Width="150*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="75*"/>
                                                <RowDefinition Height="75*"/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,10,0,0">
                                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonUpTask_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Move task up">
                                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/MoveUpIcon.png"/>
                                                </Button>
                                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonDownTask_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Move task down">
                                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/MoveDownIcon.png"/>
                                                </Button>
                                                <Button Margin="5,0" Width="25" Height="25" Click="ButtonDeleteTask_Click" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="Delete task">
                                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Source="Images/TaskFailedIcon.png"/>
                                                </Button>
                                            </StackPanel>
                                            <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" BorderThickness="0" Background="Transparent" Margin="0,10,0,0"/>
                                            <TextBlock Text="{Binding DueDate, StringFormat=d}" Margin="5,10,5,5" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right">
                                                <TextBlock.Foreground>
                                                    <MultiBinding Converter="{StaticResource DueDateToColorConverter }"> 
                                                        <Binding Path="DueDate"/> 
                                                        <Binding Path="Status"/> 
                                                    </MultiBinding> 
                                                </TextBlock.Foreground>
                                            </TextBlock>
                                            <!--<TextBlock Text="{Binding Status}" Margin="5,10,5,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left"/>-->
                                            <Button Grid.Column="0" Grid.RowSpan="2" Click="TaskImage_MouseLeftButtonDown" HorizontalAlignment="Left" Width="60" Height="60" ToolTip="{Binding Status}" Background="{x:Null}" BorderBrush="{x:Null}" >
                                                <Image x:Name="taskImage" RenderOptions.BitmapScalingMode="HighQuality" Source="{Binding Path=Status, Converter={StaticResource TaskStatusToImagePathConverter}, BindsDirectlyToSource=True}" ToolTip="{Binding Status}"/>
                                            </Button>
                                        </Grid>
                                        <!--<DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Status}" Value="Pending" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="taskImage" Property="Source" Value="/Images/TaskPendingIcon.png"/>
                                                    <Setter TargetName="taskImage" Property="ToolTip" Value="Pending" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Status}" Value="Complete" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="taskImage" Property="Source" Value="/Images/TaskDoneIcon.png"/>
                                                    <Setter TargetName="taskImage" Property="ToolTip" Value="Complete" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>-->
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Border Grid.Column="1" BorderThickness="1" BorderBrush="#FFABADB3" Margin="5" Background="#FFFEFFEE">
                <StackPanel x:Name="editPanel" Visibility="Hidden" Opacity="0">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Resources>
                                <Storyboard x:Key="FadeOut">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" FillBehavior="Stop">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" AutoReverse="False" />
                                </Storyboard>
                                <Storyboard x:Key="FadeIn">
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" AutoReverse="False" />
                                </Storyboard>
                            </Style.Resources>
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Visibility" Value="Hidden" />
                                        <Condition Property="Opacity" Value="1" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <StopStoryboard BeginStoryboardName="FadeInStoryboard" />
                                        <BeginStoryboard Name="FadeOutStoryboard" Storyboard="{StaticResource FadeOut}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Visibility" Value="Visible" />
                                        <Condition Property="Opacity" Value="0" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <StopStoryboard BeginStoryboardName="FadeOutStoryboard" />
                                        <BeginStoryboard Name="FadeInStoryboard" Storyboard="{StaticResource FadeIn}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <Label Content="Edit selected task:" HorizontalAlignment="Center" FontWeight="Bold"/>
                    <Label Content="Title:" Margin="10,0,10,0"/>
                    <TextBox x:Name="titleTextBox" Margin="10,0" TextWrapping="Wrap" Text="{Binding Title, Mode=TwoWay}"/>
                    <Label Content="Description:" Margin="10,0,10,0"/>
                    <TextBox x:Name="descTextBox" Margin="10,0" Height="125" TextWrapping="Wrap" Text="{Binding Description, Mode=TwoWay}"/>
                    <Label Content="Due date:" Margin="10,0,10,0"/>
                    <DatePicker x:Name="dueDatePicker" Margin="10,0" SelectedDate="{Binding DueDate, Mode=TwoWay}"/>
                    <Label Content="Status:" Margin="10,0,10,0"/>
                    <ComboBox x:Name="statusComboBox" Margin="10,0" SelectedItem="{Binding Status, Mode=TwoWay}"/>
                </StackPanel>
            </Border>
        </Grid>
        <StatusBar Grid.Row="3" Height="20" x:Name="statusBar">
            <StatusBarItem Content="Groups:"/>
            <StatusBarItem Content="{Binding ElementName=groupList, Path=Items.Count, Mode=OneWay}"/>
            <Separator/>
            <StatusBarItem Content="Tasks:"/>
            <StatusBarItem x:Name="statusTaskCount"/>
        </StatusBar>
    </Grid>
</Window>
